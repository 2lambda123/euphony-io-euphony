apply plugin: 'com.android.library'

android {
    compileSdkVersion(30)

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        /* This externalNativeBuild block is different from the one which is on the outside of defaultConfig  */
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14 -fopenmp"
                arguments "-DANDROID_STL=c++_shared"
                arguments "-DANDROID_SDK_ROOT=${android.getSdkDirectory().getAbsolutePath()}"
            }
        }
    }

    preBuild.dependsOn rootProject.cleanCache

    buildTypes {
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            testCoverageEnabled false
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"
        }
    }

    lintOptions {
        warning 'MissingPermission'
    }

    buildFeatures {
        prefab true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    gradle.buildFinished {
        def abiArr = ['arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64']
        def logfile = "android_gradle_build_stdout_targets.txt"
        def lastWordIfThereAreNoDevice = "Linking"
        def resultStr = "\n"
        def noDevice = true
        for (abi in abiArr) {
            def filePath = "euphony/.cxx/cmake/debug/$abi/$logfile"
            def file = new File(filePath)
            if (file.exists()) {
                def lines = file.readLines()
                if (lines.get(lines.size() - 1).contains(lastWordIfThereAreNoDevice))
                    continue
                noDevice = false
                resultStr += "> $abi/$logfile\n"
                resultStr += lines.join("\n")
            }
        }
        if (noDevice)
            println "The build was successful, not verified by unit tests. For unit testing, connect a virtual device or Android device to adb."
        else
            println "Print build_stdout $resultStr"
    }
}

if ( project.hasProperty("ossrhUsername")
        && project.hasProperty("ossrhPassword")
        && project.hasProperty("sonatypeStagingProfileId")
        && project.hasProperty("signing.keyId")
        && project.hasProperty("signing.key")
        && project.hasProperty("signing.password")
) {
    apply from: "publish.gradle"
}

dependencies {
    implementation 'com.google.oboe:oboe:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}